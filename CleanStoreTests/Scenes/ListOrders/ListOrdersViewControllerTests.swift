//
//  ListOrdersViewControllerTests.swift
//  CleanStore
//
//  Created by Carlos Cortés Sánchez on 12/09/2017.
//  Copyright (c) 2017 Carlos Cortés Sánchez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanStore
import XCTest

class ListOrdersViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListOrdersViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupListOrdersViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListOrdersViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "ListOrdersViewController") as! ListOrdersViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class ListOrdersBusinessLogicSpy: ListOrdersBusinessLogic
  {
    var fetchOrdersCalled = false
    
    func fetchOrders(request: ListOrders.FetchOrders.Request)
    {
      fetchOrdersCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldFetchOrdersWhenViewIsLoaded()
  {
    // Given
    let listOrdersBussinessLogicSpy = ListOrdersBusinessLogicSpy()
    sut.interactor = listOrdersBussinessLogicSpy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(listOrdersBussinessLogicSpy.fetchOrdersCalled, "Should fetch orders when the view is loaded")
  }
  
  func testDisplaySomething()
  {
    // Given
    //let viewModel = ListOrders.Something.ViewModel()
    
    // When
    //loadView()
    //sut.displaySomething(viewModel: viewModel)
    
    // Then
    //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
  }
}
